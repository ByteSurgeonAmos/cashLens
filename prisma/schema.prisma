// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  hashedPassword String?   
  twoFactorSecret String?  
  twoFactorEnabled Boolean @default(false) 
  backupCodes   String[] 
  currency      String    @default("USD")
  theme         String    @default("light")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts     Account[]
  sessions     Session[]
  categories   Category[]
  transactions Transaction[]
  budgets      Budget[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id          String        @id @default(cuid())
  name        String
  icon        String        @default("ðŸ’°")
  color       String        @default("#3B82F6")
  type        CategoryType
  userId      String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]
  budgets      Budget[]

  @@unique([name, userId, type])
}

model Transaction {
  id          String          @id @default(cuid())
  amount      Decimal         @db.Decimal(10, 2)
  description String
  type        TransactionType
  date        DateTime        @default(now())
  categoryId  String
  userId      String
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, date])
  @@index([userId, type])
  @@index([categoryId])
}

model Budget {
  id         String   @id @default(cuid())
  amount     Decimal  @db.Decimal(10, 2)
  spent      Decimal  @default(0) @db.Decimal(10, 2)
  period     Period   @default(MONTHLY)
  startDate  DateTime
  endDate    DateTime
  categoryId String
  userId     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([categoryId, userId, startDate])
}

enum CategoryType {
  INCOME
  EXPENSE
}

enum TransactionType {
  INCOME
  EXPENSE
}

enum Period {
  WEEKLY
  MONTHLY
  YEARLY
}
